// root left right

// Approach 1-> Recursive approach
void preorder(TreeNode* root, vector<int> &ans)
    {
        if(root==NULL)
        {
            return;
        }
        ans.push_back(root->val);
        preorder(root->left, ans);
        preorder(root->right, ans);
    }

    vector<int> preorderTraversal(TreeNode* root) {
        vector<int> ans;
        preorder(root, ans);
        return ans;
    }

// Approach 2 -> Iterative way 

class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        vector<int> ans;
        if(root==NULL) return ans;
        stack<TreeNode*> st;
        st.push(root);

        while(!st.empty())
        {
            auto it=st.top();
            st.pop();
            ans.push_back(it->val);
            if(it->right) st.push(it->right);
            if(it->left) st.push(it->left);
        }
        return ans;
    }
};
