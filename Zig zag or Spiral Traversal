// Approach 1

class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> result;
        if(root==NULL)
        {
            return result;
        }

    queue<TreeNode*> NodesQueue;
    NodesQueue.push(root);
    bool leftToRight=true;

    while(!NodesQueue.empty())
    {
        int size=NodesQueue.size();
        vector<int> row(size);
        for(int i=0; i<size; i++)
        {
            TreeNode* node=NodesQueue.front();
            NodesQueue.pop();

            int index=leftToRight ? i: size-i-1;
            row[index]=node->val;
            if(node->left) NodesQueue.push(node->left);
            if(node->right) NodesQueue.push(node->right);
        }
        leftToRight=!leftToRight;
        result.push_back(row);
    }
    return result;
    }
};
